// Code generated by protoc-gen-go. DO NOT EDIT.
// source: project/project.proto

package project

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Project struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UserId               uint64               `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{0}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Project) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CreateProjectRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{1}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateProjectResponse struct {
	Project              *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectResponse) Reset()         { *m = CreateProjectResponse{} }
func (m *CreateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*CreateProjectResponse) ProtoMessage()    {}
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{2}
}

func (m *CreateProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectResponse.Unmarshal(m, b)
}
func (m *CreateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectResponse.Marshal(b, m, deterministic)
}
func (m *CreateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectResponse.Merge(m, src)
}
func (m *CreateProjectResponse) XXX_Size() int {
	return xxx_messageInfo_CreateProjectResponse.Size(m)
}
func (m *CreateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectResponse proto.InternalMessageInfo

func (m *CreateProjectResponse) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

type FindProjectRequest struct {
	ProjectId            uint64   `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindProjectRequest) Reset()         { *m = FindProjectRequest{} }
func (m *FindProjectRequest) String() string { return proto.CompactTextString(m) }
func (*FindProjectRequest) ProtoMessage()    {}
func (*FindProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{3}
}

func (m *FindProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindProjectRequest.Unmarshal(m, b)
}
func (m *FindProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindProjectRequest.Marshal(b, m, deterministic)
}
func (m *FindProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindProjectRequest.Merge(m, src)
}
func (m *FindProjectRequest) XXX_Size() int {
	return xxx_messageInfo_FindProjectRequest.Size(m)
}
func (m *FindProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindProjectRequest proto.InternalMessageInfo

func (m *FindProjectRequest) GetProjectId() uint64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

type FindProjectResponse struct {
	Project              *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindProjectResponse) Reset()         { *m = FindProjectResponse{} }
func (m *FindProjectResponse) String() string { return proto.CompactTextString(m) }
func (*FindProjectResponse) ProtoMessage()    {}
func (*FindProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{4}
}

func (m *FindProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindProjectResponse.Unmarshal(m, b)
}
func (m *FindProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindProjectResponse.Marshal(b, m, deterministic)
}
func (m *FindProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindProjectResponse.Merge(m, src)
}
func (m *FindProjectResponse) XXX_Size() int {
	return xxx_messageInfo_FindProjectResponse.Size(m)
}
func (m *FindProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindProjectResponse proto.InternalMessageInfo

func (m *FindProjectResponse) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

type FindProjectsResponse struct {
	Projects             []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FindProjectsResponse) Reset()         { *m = FindProjectsResponse{} }
func (m *FindProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*FindProjectsResponse) ProtoMessage()    {}
func (*FindProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{5}
}

func (m *FindProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindProjectsResponse.Unmarshal(m, b)
}
func (m *FindProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindProjectsResponse.Marshal(b, m, deterministic)
}
func (m *FindProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindProjectsResponse.Merge(m, src)
}
func (m *FindProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_FindProjectsResponse.Size(m)
}
func (m *FindProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindProjectsResponse proto.InternalMessageInfo

func (m *FindProjectsResponse) GetProjects() []*Project {
	if m != nil {
		return m.Projects
	}
	return nil
}

type UpdateProjectRequest struct {
	ProjectId            uint64   `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectName          string   `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateProjectRequest) Reset()         { *m = UpdateProjectRequest{} }
func (m *UpdateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectRequest) ProtoMessage()    {}
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{6}
}

func (m *UpdateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectRequest.Unmarshal(m, b)
}
func (m *UpdateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectRequest.Merge(m, src)
}
func (m *UpdateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectRequest.Size(m)
}
func (m *UpdateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectRequest proto.InternalMessageInfo

func (m *UpdateProjectRequest) GetProjectId() uint64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *UpdateProjectRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

type UpdateProjectResponse struct {
	Project              *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateProjectResponse) Reset()         { *m = UpdateProjectResponse{} }
func (m *UpdateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectResponse) ProtoMessage()    {}
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{7}
}

func (m *UpdateProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectResponse.Unmarshal(m, b)
}
func (m *UpdateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectResponse.Marshal(b, m, deterministic)
}
func (m *UpdateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectResponse.Merge(m, src)
}
func (m *UpdateProjectResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectResponse.Size(m)
}
func (m *UpdateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectResponse proto.InternalMessageInfo

func (m *UpdateProjectResponse) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

func init() {
	proto.RegisterType((*Project)(nil), "project.Project")
	proto.RegisterType((*CreateProjectRequest)(nil), "project.CreateProjectRequest")
	proto.RegisterType((*CreateProjectResponse)(nil), "project.CreateProjectResponse")
	proto.RegisterType((*FindProjectRequest)(nil), "project.FindProjectRequest")
	proto.RegisterType((*FindProjectResponse)(nil), "project.FindProjectResponse")
	proto.RegisterType((*FindProjectsResponse)(nil), "project.FindProjectsResponse")
	proto.RegisterType((*UpdateProjectRequest)(nil), "project.UpdateProjectRequest")
	proto.RegisterType((*UpdateProjectResponse)(nil), "project.UpdateProjectResponse")
}

func init() { proto.RegisterFile("project/project.proto", fileDescriptor_2cf0ca921a221351) }

var fileDescriptor_2cf0ca921a221351 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x5d, 0xaf, 0x93, 0x40,
	0x10, 0x0d, 0xdc, 0xe6, 0xd6, 0x0e, 0xf7, 0xde, 0x98, 0xb5, 0x55, 0x42, 0xad, 0x22, 0x4f, 0x4d,
	0xa3, 0x10, 0x5b, 0xe3, 0xc7, 0x63, 0xad, 0x35, 0xf6, 0xa5, 0x31, 0xa8, 0x89, 0xf1, 0xa5, 0x01,
	0x76, 0xc5, 0x35, 0xc2, 0x22, 0xbb, 0x98, 0xf8, 0xe8, 0x4f, 0xf3, 0x9f, 0x99, 0xc2, 0x2e, 0xa5,
	0x14, 0x4d, 0xbc, 0x4f, 0x30, 0x33, 0x67, 0xcf, 0xcc, 0x9c, 0xc3, 0x02, 0xa3, 0x2c, 0x67, 0x5f,
	0x49, 0x24, 0x3c, 0xf9, 0x74, 0xb3, 0x9c, 0x09, 0x86, 0xfa, 0x32, 0xb4, 0xee, 0xc7, 0x8c, 0xc5,
	0xdf, 0x88, 0x57, 0xa6, 0xc3, 0xe2, 0xb3, 0x27, 0x68, 0x42, 0xb8, 0x08, 0x92, 0xac, 0x42, 0x5a,
	0xe3, 0x36, 0x80, 0x24, 0x99, 0xf8, 0x59, 0x15, 0x9d, 0x5f, 0x1a, 0xf4, 0xdf, 0x56, 0x4c, 0xe8,
	0x0a, 0x74, 0x8a, 0x4d, 0xcd, 0xd6, 0xa6, 0x3d, 0x5f, 0xa7, 0x18, 0x21, 0xe8, 0xa5, 0x41, 0x42,
	0x4c, 0xdd, 0xd6, 0xa6, 0x03, 0xbf, 0x7c, 0x47, 0x77, 0xa0, 0x5f, 0x70, 0x92, 0xef, 0x28, 0x36,
	0xcf, 0x4a, 0xe0, 0xf9, 0x3e, 0xdc, 0x60, 0xf4, 0x02, 0x20, 0xca, 0x49, 0x20, 0x08, 0xde, 0x05,
	0xc2, 0xec, 0xd9, 0xda, 0xd4, 0x98, 0x5b, 0x6e, 0xd5, 0xda, 0x55, 0xad, 0xdd, 0xf7, 0x6a, 0x36,
	0x7f, 0x20, 0xd1, 0x4b, 0xe1, 0xcc, 0x60, 0xb8, 0x2a, 0x03, 0x39, 0x88, 0x4f, 0xbe, 0x17, 0x84,
	0x8b, 0xba, 0xbf, 0x76, 0xe8, 0xef, 0xac, 0x60, 0xd4, 0xc2, 0xf2, 0x8c, 0xa5, 0x9c, 0xa0, 0x19,
	0x28, 0x45, 0x4a, 0xbc, 0x31, 0xbf, 0xe9, 0x2a, 0xc1, 0x14, 0x54, 0x01, 0x9c, 0x05, 0xa0, 0xd7,
	0x34, 0xc5, 0xad, 0x76, 0x13, 0x00, 0x09, 0xd8, 0xd5, 0x32, 0x0c, 0x64, 0x66, 0x83, 0x9d, 0x25,
	0xdc, 0x3a, 0x3a, 0x74, 0x8d, 0xbe, 0xaf, 0x60, 0xd8, 0xa0, 0xe0, 0x35, 0xc7, 0x43, 0xb8, 0x21,
	0x21, 0xdc, 0xd4, 0xec, 0xb3, 0x4e, 0x92, 0x1a, 0xe1, 0x7c, 0x84, 0xe1, 0x87, 0x0c, 0x9f, 0xca,
	0xf5, 0xef, 0xf9, 0xd1, 0x03, 0xb8, 0x50, 0xe5, 0x86, 0xab, 0x86, 0xcc, 0x6d, 0xa5, 0xb8, 0x2d,
	0xe6, 0xff, 0x5f, 0x72, 0xfe, 0x5b, 0x87, 0x2b, 0x99, 0x7c, 0x47, 0xf2, 0x1f, 0x34, 0x22, 0x68,
	0x0b, 0x97, 0x47, 0xa6, 0xa1, 0x49, 0x7d, 0xbc, 0xcb, 0x78, 0xeb, 0xde, 0xdf, 0xca, 0x72, 0x9c,
	0x37, 0x60, 0x34, 0x74, 0x44, 0xe3, 0x1a, 0x7e, 0xea, 0xaa, 0x75, 0xb7, 0xbb, 0x28, 0x99, 0xd6,
	0x70, 0xd1, 0x74, 0x04, 0xdd, 0x3e, 0xf9, 0x62, 0xd7, 0xfb, 0xcb, 0x62, 0x4d, 0xba, 0x58, 0x0e,
	0x06, 0x6e, 0xe1, 0xf2, 0x48, 0xb8, 0xc6, 0x82, 0x5d, 0x56, 0x35, 0x16, 0xec, 0xd4, 0xfb, 0xe5,
	0xd3, 0x4f, 0x4f, 0x62, 0x2a, 0xbe, 0x14, 0xa1, 0x1b, 0xb1, 0xc4, 0x7b, 0xfc, 0xec, 0x39, 0x4d,
	0x83, 0x30, 0xf0, 0xe2, 0x3c, 0x8b, 0x1e, 0x25, 0x34, 0xca, 0x19, 0xaf, 0x94, 0xe5, 0xd5, 0xa5,
	0x56, 0xbf, 0x86, 0xf0, 0xbc, 0x0c, 0x17, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x7c, 0x5c,
	0x1d, 0x34, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectServiceClient is the client API for ProjectService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectServiceClient interface {
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error)
	FindProject(ctx context.Context, in *FindProjectRequest, opts ...grpc.CallOption) (*FindProjectResponse, error)
	FindProjects(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FindProjectsResponse, error)
	UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error)
}

type projectServiceClient struct {
	cc *grpc.ClientConn
}

func NewProjectServiceClient(cc *grpc.ClientConn) ProjectServiceClient {
	return &projectServiceClient{cc}
}

func (c *projectServiceClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error) {
	out := new(CreateProjectResponse)
	err := c.cc.Invoke(ctx, "/project.ProjectService/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) FindProject(ctx context.Context, in *FindProjectRequest, opts ...grpc.CallOption) (*FindProjectResponse, error) {
	out := new(FindProjectResponse)
	err := c.cc.Invoke(ctx, "/project.ProjectService/FindProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) FindProjects(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FindProjectsResponse, error) {
	out := new(FindProjectsResponse)
	err := c.cc.Invoke(ctx, "/project.ProjectService/FindProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error) {
	out := new(UpdateProjectResponse)
	err := c.cc.Invoke(ctx, "/project.ProjectService/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectServiceServer is the server API for ProjectService service.
type ProjectServiceServer interface {
	CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error)
	FindProject(context.Context, *FindProjectRequest) (*FindProjectResponse, error)
	FindProjects(context.Context, *empty.Empty) (*FindProjectsResponse, error)
	UpdateProject(context.Context, *UpdateProjectRequest) (*UpdateProjectResponse, error)
}

// UnimplementedProjectServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProjectServiceServer struct {
}

func (*UnimplementedProjectServiceServer) CreateProject(ctx context.Context, req *CreateProjectRequest) (*CreateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedProjectServiceServer) FindProject(ctx context.Context, req *FindProjectRequest) (*FindProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindProject not implemented")
}
func (*UnimplementedProjectServiceServer) FindProjects(ctx context.Context, req *empty.Empty) (*FindProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindProjects not implemented")
}
func (*UnimplementedProjectServiceServer) UpdateProject(ctx context.Context, req *UpdateProjectRequest) (*UpdateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProject not implemented")
}

func RegisterProjectServiceServer(s *grpc.Server, srv ProjectServiceServer) {
	s.RegisterService(&_ProjectService_serviceDesc, srv)
}

func _ProjectService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.ProjectService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_FindProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).FindProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.ProjectService/FindProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).FindProject(ctx, req.(*FindProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_FindProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).FindProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.ProjectService/FindProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).FindProjects(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.ProjectService/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).UpdateProject(ctx, req.(*UpdateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProjectService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "project.ProjectService",
	HandlerType: (*ProjectServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _ProjectService_CreateProject_Handler,
		},
		{
			MethodName: "FindProject",
			Handler:    _ProjectService_FindProject_Handler,
		},
		{
			MethodName: "FindProjects",
			Handler:    _ProjectService_FindProjects_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _ProjectService_UpdateProject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "project/project.proto",
}
